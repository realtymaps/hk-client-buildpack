#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e


# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3


# export_env_dir() is a utility function copied from:
# https://devcenter.heroku.com/articles/buildpack-api#bin-compile-summary
export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir "$ENV_DIR"


#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

HK_LOCATION=$CACHE_DIR/hk
if [ ! -f "$HK_LOCATION" ]
then
    echo "-----> Installing hk..."
    curl -sL -A "`uname -sp`" https://hk.heroku.com/hk.gz | zcat >$HK_LOCATION && chmod +x $HK_LOCATION
else
    echo "-----> Updating hk..."
    $HK_LOCATION update
fi
echo "       ... done."
echo -n "       version: "
$HK_LOCATION version

echo "-----> Copying hk to BUILD_DIR"
cp "$HK_LOCATION" "$BUILD_DIR"


if [ -n "$HEROKU_USERNAME" ] && [ -n "$HEROKU_AUTH_TOKEN" ]
then
    echo "-----> Installing Heroku credentials"
    echo -e "machine api.heroku.com\n  login $HEROKU_USERNAME\n  password $HEROKU_AUTH_TOKEN" >> $BUILD_DIR/.netrc
fi

